jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet build

  test:
    # needs: build -- makes sure test happens after build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover

  analyze:
    needs: [build, test]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet tool install --global dotnet-sonarscanner
      - run: |
          dotnet sonarscanner begin -o:'jpittman23' -k:'jpittman23_Week_4' -d:sonar.login='54dd918b839b1a960f1b72990516160a954fbf66' -d:sonar.host.url='https://sonarcloud.io/'
          dotnet build
          dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
          dotnet sonarscanner end -d:sonar.login='54dd918b839b1a960f1b72990516160a954fbf66'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  package:
    env:
      Docker_login: ${{ secrets.Docker_login }}
      Docker_token: ${{ secrets.Docker_token}}
    needs: [analyze]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: echo ${Docker_token} | docker login --username ${Docker_login} --password-stdin
      - run: docker image build -f dockerfile -t devopsci .
      - run: docker tag devopsci jpittman23/devopsci
      - run: docker image push jpittman23/devopsci
      - run: docker logout
  # deploy:

name: cibuild

on:
  push:
    brancher:
      - master


# person:
#   firstName: 'Jordan' # string
#   lastName: 100 # number
#   middleName: true # bool
#   alias: #collection
#     - 'dotnet'
#     - 'lead'
#     - subAlias:
      